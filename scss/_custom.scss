// place for selection to customise elements not supported by default variables

// Search bar placeholder
div.input-wrap>input::placeholder {
    color: var(--rp-search-input-placeholder);
}

// search result page icon
.recent-search {
    a>div>div {
        border-color: rgb(var(--rp-text));
    }
}

// Switches
a.ui__toggle {
    & .wrapper:focus {
        --tw-shadow: 0 0 0 3px rgba(var(--rp-switch-handle-color), 0.5)
    }

    &>span {
        background-color: var(--rp-switch-background);

        &>span.switcher {
            background-color: rgb(var(--rp-switch-handle-color));
        }
    }
}

// Buttons

button.ui__button {
    color: var(--rp-button-text);
    background-color: rgb(var(--rp-button-background));

    &[intent=logseq]:hover:not(.active) {
        color: var(--rp-button-text);
        background-color: rgb(var(--rp-button-background));
    }

    &:hover {
        background-color: rgb(var(--rp-button-background));
    }
}

// Tooltip
.tippy-tooltip {
    background: var(--rp-tooltip-background);
    color: var(--rp-tooltip-text)
}

.tippy-popper .arrow-regular {
    display: none;
    /* Hide the arrow */
}


// Plugins page
.dark .ui__button[intent=logseq]:hover {
    color: var(--ls-link-text-color);
}

svg.warning {
    fill: rgb(var(--rp-warning-color));
}

svg.important {
    fill: rgb(var(--rp-error-color));
}

svg.note {
    fill: rgb(var(--rp-info-color));
}

// Global

div.nav-content-item:not(.is-expand) {
    .header {
        background-color: var(--ls-tertiary-background-color);
    }

    .header a {
        color: var(--rp-link-text-hover-color);
    }
}

.left-sidebar-inner a.item.active,
.left-sidebar-inner a.item:active {
    color: var(--rp-link-text-hover-color);

}

.left-sidebar-inner a.item:hover {
    background: var(--rp-color-level-3);
    span {
        color: var(--rp-blue);
    }
}

.cp__sidebar-left-layout .header:hover a {
    color: var(--rp-link-text-hover-color);
}

.ui__modal-panel {
    border: 1px solid;
    border-color: var(--rp-dropdown-border-color)
}

.dropdown-wrapper {
    border: 1px solid;
    border-color: var(--rp-dropdown-border-color)
}

.block-children-left-border:hover {
    width: 2px;
    background-color: var(--rp-bullet-thread-color);
}

mark {
    background: var(--rp-text-highlight);
}

.form-input:focus {
    box-shadow: 0 0 0 2px rgba(var(--rp-accent, var(--rp-sapphire)), .5);
    border-color: rgba(var(--rp-accent, var(--rp-sapphire)), .5);
}

.bullet-container.bullet-closed {
    background-color: rgb(var(--rp-accent, var(--rp-blue)), .15);

    &:hover {
        background-color: rgb(var(--rp-accent, var(--rp-blue)), .65);
    }
}

.bullet-container {
    &:hover {
        background-color: rgb(var(--rp-accent, var(--rp-blue)), .15);
    }
}

// Header
button.button.icon:hover {
    color: rgb(var(--rp-accent, var(--rp-subtle)));
    background-color: var(--rp-header-icon-background);

    &>i {
        color: var(--rp-header-icon);
    }
}


// SideBar
.cp__sidebar-left-layout a {
    color: inherit;
}

.left-sidebar-inner .nav-content-item .header {
    background-color: var(--ls-tertiary-background-color);
}

html[data-theme=dark] .cp__header a,
html[data-theme=dark] .cp__header button,
html[data-theme=dark] .cp__right-sidebar-topbar button {
    opacity: 1;
}

// selection
::selection {
    color: var(--rp-selection-text-color);
}

.inline.with-bg-color {
    color: var(--rp-primary-background-color);
    b, .page-ref {
        color: var(--rp-primary-background-color);
    }
    .page-reference:hover {
        color: var(--rp-primary-text-color);
        b, .page-ref, span {
            color: var(--rp-primary-text-color);
        }
    }

}

.ls-block .with-bg-color:is(h1,h2,h3,h4,h5,h6) {
	color: var(--rp-primary-background-color);
}


// menu-links and dropdowns

.menu-links-wrapper,
.menu-link {
    background-color: var(--rp-secondary-background-color);
}

.menu-link,
.menu-link:hover {
    margin-left: 0.5rem;
    margin-right: 0.5rem;
    padding-left: 0.5rem;
    padding-right: 0.5rem;
    border-radius: 5px;
}

.cp__settings-inner>aside ul>li>a>strong {
    color: rgb(var(--rp-primary-text-color));
}

.cp__settings-inner>aside ul>li.active {
    .ui__icon, strong {
        color: rgb(var(--rp-active-setting));
    }
}

.cp__all_pages_table td>span {
    color: rgb(var(--rp-primary-text-color));
}

// full pallete overrides
.editor-inner .multiline-block:is(.h1, .h2, .h3, .h4, .h5, .h6):first-line,
.editor-inner .uniline-block:is(.h1, .h2, .h3, .h4, .h5, .h6),
.ls-block :is(h1, h2, h3, h4, h5, h6) {
    color:rgb(var(--rp-text-heading))
}

b, strong {
    color: rgb(var(--rp-text-bold));
}

i {
    color: rgb(var(--rp-text-italics));
}

del {
    color: rgb(var(--rp-text-strikethrough));
}
blockquote {
    border-left: 2px solid;
    border-left-color: rgb(var(--rp-blockquote-line));
}

$pallete: (
    "Yellow": var(--ls-highlight-color-yellow),
    "Red": var(--ls-highlight-color-red),
    "Pink": var(--ls-highlight-color-pink),
    "Green": var(--ls-highlight-color-green),
    "Blue": var(--ls-highlight-color-blue),
    "Purple": var(--ls-highlight-color-purple),
    "Gray": var(--ls-highlight-color-gray),
);

// highlight color pallete in dropdown
@each $title, $value in $pallete {
    a[title=#{$title}].shadow-sm>.heading-bg {
        background-color: #{$value} !important;
    }
}


// Dropdown option group
#ui__ac-inner {
    background: var(--rp-secondary-background-color);
}

.ui__ac-group-name {
    background: var(--rp-tertiary-background-color);
}
